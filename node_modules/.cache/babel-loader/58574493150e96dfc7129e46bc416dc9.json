{"ast":null,"code":"var _jsxFileName = \"/home/thomas/navebe/front/src/components/creating_area/ListStock/cardList/CardListResponse/CardListResponse.js\";\nimport React, { useState, useEffect } from 'react';\nimport './CardListResponse.css';\nimport url from '../../../../../api/url';\nimport origin from '../../../../../api/origin';\nimport ContentEditable from 'react-contenteditable';\nimport useGlobalState from '../../../../../hooks/useGlobalState';\nimport useGlobalStateAddingCard from '../../../../../hooks/useGlobalStateAddingCard';\n\nconst CardListResponse = props => {\n  const [contentEditable] = useState(React.createRef());\n  const [inputValue, setInputValue] = useState({\n    html: props.content\n  });\n  const [classIconUpdate] = useState('updateIconRes');\n  const [classJoinRes, setClassJoinRes] = useState('joinIconRes');\n  const {\n    connectClassActive\n  } = useGlobalState();\n  const {\n    addingCard\n  } = useGlobalStateAddingCard();\n  const [updating, setUpdating] = useState(false);\n  const [userId, setUserId] = useState();\n  const [modelId, setModelId] = useState();\n  const [token, setToken] = useState();\n  useEffect(() => {\n    if (localStorage.getItem('userId')) {\n      setUserId(localStorage.getItem('userId'));\n      setToken(localStorage.getItem('token'));\n    } else {\n      setUserId(sessionStorage.getItem('userId'));\n      setToken(sessionStorage.getItem('token'));\n    }\n\n    setModelId(sessionStorage.getItem('modelId'));\n  }, []);\n\n  const deleteResponse = async () => {\n    if (window.confirm(`es tu sûrs de vouloir supprimer la réponses ${props.content} et toutes ses relations ?`)) {\n      fetch(`${url}/relation/deleteAllRelationResponse/${props.id}/${userId}/${modelId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Acces-Control-Allow-Origin': {\n            origin\n          },\n          'authorization': token\n        }\n      });\n      fetch(`${url}/container/deleteContainerRelationResponse/${props.id}/${userId}/${modelId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Acces-Control-Allow-Origin': {\n            origin\n          },\n          'authorization': token\n        }\n      });\n      fetch(`${url}/response/delete/${props.id}/${userId}/${modelId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Acces-Control-Allow-Origin': {\n            origin\n          },\n          'authorization': token\n        }\n      });\n      addingCard();\n      setTimeout(() => {\n        document.location.reload(true);\n      }, 200);\n    }\n  };\n\n  const ValidUpdateResponse = () => {\n    fetch(`${url}/response/update/${props.id}/${userId}/${modelId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': `${origin}`,\n        'authorization': token\n      },\n      body: JSON.stringify({\n        content: inputValue.html\n      })\n    });\n    addingCard();\n    setUpdating(false);\n  };\n\n  const updateResponse = () => {\n    setUpdating(true);\n  };\n\n  const changeInput = event => {\n    setInputValue({\n      html: event.target.value\n    });\n  };\n\n  const joinResponse = () => {\n    let valid = true;\n    fetch(`${url}/relation/find/${userId}/${modelId}`).then(res => res.json()).then(res => {\n      for (let i = 0; i < res.length; i++) {\n        if (res[i].response_id === props.id) {\n          valid = false;\n        }\n\n        console.log(valid);\n      }\n\n      if (valid === true) {\n        setClassJoinRes('joinIconResActive');\n        connectClassActive();\n\n        try {\n          fetch(`${url}/relation/add`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Acces-Control-Allow-Origin': {\n                origin\n              },\n              'authorization': token\n            },\n            body: JSON.stringify({\n              response_id: props.id,\n              onChange: true,\n              user_id: userId,\n              model_id: modelId\n            })\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        alert('reponse déja attribuée');\n      }\n    });\n  };\n\n  onmousedown = function (event) {\n    setClassJoinRes('joinIconRes');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"containerCardList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, updating === true ? React.createElement(\"div\", {\n    className: \"contentCardList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(ContentEditable, {\n    className: \"contentQuestionInput\",\n    innerRef: contentEditable,\n    html: inputValue.html,\n    disabled: false,\n    onChange: changeInput,\n    tagName: \"article\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: ValidUpdateResponse,\n    className: \"validUpdateCardRes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Valider\")) : React.createElement(\"div\", {\n    className: \"contentCardList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"textTitleCardRes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, props.content), React.createElement(\"div\", {\n    className: \"containericon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"join icon\",\n    onClick: joinResponse,\n    src: require('../image/join_icon.png'),\n    className: classJoinRes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    alt: \"update icon\",\n    onClick: updateResponse,\n    src: require('../image/update_icon.png'),\n    className: classIconUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    alt: \"delete icon\",\n    onClick: deleteResponse,\n    src: require('../image/delete_icon.png'),\n    className: \"deleteIconRes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))));\n};\n\nexport default CardListResponse;","map":{"version":3,"sources":["/home/thomas/navebe/front/src/components/creating_area/ListStock/cardList/CardListResponse/CardListResponse.js"],"names":["React","useState","useEffect","url","origin","ContentEditable","useGlobalState","useGlobalStateAddingCard","CardListResponse","props","contentEditable","createRef","inputValue","setInputValue","html","content","classIconUpdate","classJoinRes","setClassJoinRes","connectClassActive","addingCard","updating","setUpdating","userId","setUserId","modelId","setModelId","token","setToken","localStorage","getItem","sessionStorage","deleteResponse","window","confirm","fetch","id","method","headers","setTimeout","document","location","reload","ValidUpdateResponse","body","JSON","stringify","updateResponse","changeInput","event","target","value","joinResponse","valid","then","res","json","i","length","response_id","console","log","onChange","user_id","model_id","error","alert","onmousedown","require"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,wBAAP;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,wBAAP,MAAqC,+CAArC;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAM,CAACC,eAAD,IAAoBT,QAAQ,CAACD,KAAK,CAACW,SAAN,EAAD,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC;AAACa,IAAAA,IAAI,EAAEL,KAAK,CAACM;AAAb,GAAD,CAA5C;AACA,QAAM,CAACC,eAAD,IAAoBf,QAAQ,CAAC,eAAD,CAAlC;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,aAAD,CAAhD;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAyBb,cAAc,EAA7C;AACA,QAAM;AAACc,IAAAA;AAAD,MAAeb,wBAAwB,EAA7C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,EAApC;AACA,QAAM,CAACwB,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,EAAtC;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG2B,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAH,EAAkC;AAC9BN,MAAAA,SAAS,CAACK,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CAAT;AACAF,MAAAA,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAR;AACH,KAHD,MAGO;AACHN,MAAAA,SAAS,CAACO,cAAc,CAACD,OAAf,CAAuB,QAAvB,CAAD,CAAT;AACAF,MAAAA,QAAQ,CAACG,cAAc,CAACD,OAAf,CAAuB,OAAvB,CAAD,CAAR;AACH;;AACDJ,IAAAA,UAAU,CAACK,cAAc,CAACD,OAAf,CAAuB,SAAvB,CAAD,CAAV;AACH,GATQ,EASN,EATM,CAAT;;AAWA,QAAME,cAAc,GAAG,YAAY;AAC/B,QAAGC,MAAM,CAACC,OAAP,CAAgB,+CAA8CzB,KAAK,CAACM,OAAQ,4BAA5E,CAAH,EAA4G;AACxGoB,MAAAA,KAAK,CAAE,GAAEhC,GAAI,uCAAsCM,KAAK,CAAC2B,EAAG,IAAGb,MAAO,IAAGE,OAAQ,EAA5E,EAA+E;AAChFY,QAAAA,MAAM,EAAE,QADwE;AAEhFC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,wCAA+B;AAAClC,YAAAA;AAAD,WAFxB;AAGP,2BAAiBuB;AAHV;AAFuE,OAA/E,CAAL;AAQAQ,MAAAA,KAAK,CAAE,GAAEhC,GAAI,8CAA6CM,KAAK,CAAC2B,EAAG,IAAGb,MAAO,IAAGE,OAAQ,EAAnF,EAAsF;AACvFY,QAAAA,MAAM,EAAE,QAD+E;AAEvFC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,wCAA+B;AAAClC,YAAAA;AAAD,WAFxB;AAGP,2BAAiBuB;AAHV;AAF8E,OAAtF,CAAL;AAQAQ,MAAAA,KAAK,CAAE,GAAEhC,GAAI,oBAAmBM,KAAK,CAAC2B,EAAG,IAAGb,MAAO,IAAGE,OAAQ,EAAzD,EAA4D;AAC7DY,QAAAA,MAAM,EAAE,QADqD;AAE7DC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,wCAA+B;AAAClC,YAAAA;AAAD,WAFxB;AAGP,2BAAiBuB;AAHV;AAFoD,OAA5D,CAAL;AAQAP,MAAAA,UAAU;AACVmB,MAAAA,UAAU,CAAC,MAAM;AACbC,QAAAA,QAAQ,CAACC,QAAT,CAAkBC,MAAlB,CAAyB,IAAzB;AACH,OAFS,EAEP,GAFO,CAAV;AAGH;AACJ,GA/BD;;AAiCA,QAAMC,mBAAmB,GAAG,MAAM;AAC1BR,IAAAA,KAAK,CAAE,GAAEhC,GAAI,oBAAmBM,KAAK,CAAC2B,EAAG,IAAGb,MAAO,IAAGE,OAAQ,EAAzD,EAA4D;AAC7DY,MAAAA,MAAM,EAAE,KADqD;AAE7DC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uCAAgC,GAAElC,MAAO,EAFlC;AAGP,yBAAiBuB;AAHV,OAFoD;AAO7DiB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrB/B,QAAAA,OAAO,EAAEH,UAAU,CAACE;AADC,OAAf;AAPuD,KAA5D,CAAL;AAWAM,IAAAA,UAAU;AACVE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAdL;;AAgBA,QAAMyB,cAAc,GAAG,MAAM;AACzBzB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAM0B,WAAW,GAAIC,KAAD,IAAW;AAC3BpC,IAAAA,aAAa,CAAC;AAACC,MAAAA,IAAI,EAAEmC,KAAK,CAACC,MAAN,CAAaC;AAApB,KAAD,CAAb;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIC,KAAK,GAAG,IAAZ;AACAlB,IAAAA,KAAK,CAAE,GAAEhC,GAAI,kBAAiBoB,MAAO,IAAGE,OAAQ,EAA3C,CAAL,CACC6B,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AACT,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,GAAG,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/B,YAAGF,GAAG,CAACE,CAAD,CAAH,CAAOE,WAAP,KAAuBlD,KAAK,CAAC2B,EAAhC,EAAmC;AAC/BiB,UAAAA,KAAK,GAAG,KAAR;AACH;;AACDO,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH;;AACD,UAAGA,KAAK,KAAK,IAAb,EAAkB;AACdnC,QAAAA,eAAe,CAAC,mBAAD,CAAf;AACAC,QAAAA,kBAAkB;;AAClB,YAAG;AACCgB,UAAAA,KAAK,CAAE,GAAEhC,GAAI,eAAR,EAAwB;AAC7BkC,YAAAA,MAAM,EAAE,MADqB;AAE7BC,YAAAA,OAAO,EAAE;AACL,8BAAgB,kBADX;AAEL,4CAA+B;AAAClC,gBAAAA;AAAD,eAF1B;AAGL,+BAAiBuB;AAHZ,aAFoB;AAO7BiB,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBa,cAAAA,WAAW,EAAGlD,KAAK,CAAC2B,EADH;AAEjB0B,cAAAA,QAAQ,EAAG,IAFM;AAGjBC,cAAAA,OAAO,EAAGxC,MAHO;AAIjByC,cAAAA,QAAQ,EAAGvC;AAJM,aAAf;AAPuB,WAAxB,CAAL;AAcH,SAfD,CAeE,OAAOwC,KAAP,EAAe;AACbL,UAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACP;AACA,OArBD,MAqBO;AACHC,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACH;AAEJ,KAlCD;AAmCH,GArCD;;AAuCAC,EAAAA,WAAW,GAAG,UAASlB,KAAT,EAAgB;AAC1B/B,IAAAA,eAAe,CAAC,aAAD,CAAf;AACH,GAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,QAAQ,KAAK,IAAb,GACG;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AACA,IAAA,SAAS,EAAC,sBADV;AAEA,IAAA,QAAQ,EAAEX,eAFV;AAGA,IAAA,IAAI,EAAEE,UAAU,CAACE,IAHjB;AAIA,IAAA,QAAQ,EAAE,KAJV;AAKA,IAAA,QAAQ,EAAEkC,WALV;AAMA,IAAA,OAAO,EAAC,SANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI;AAAQ,IAAA,OAAO,EAAEL,mBAAjB;AAAsC,IAAA,SAAS,EAAC,oBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ,CADH,GAaG;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiClC,KAAK,CAACM,OAAvC,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,WAAT;AAAqB,IAAA,OAAO,EAAEqC,YAA9B;AAA4C,IAAA,GAAG,EAAEgB,OAAO,CAAC,wBAAD,CAAxD;AAAoF,IAAA,SAAS,EAAEnD,YAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,GAAG,EAAC,aAAT;AAAuB,IAAA,OAAO,EAAE8B,cAAhC;AAAgD,IAAA,GAAG,EAAEqB,OAAO,CAAC,0BAAD,CAA5D;AAA0F,IAAA,SAAS,EAAEpD,eAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,GAAG,EAAC,aAAT;AAAuB,IAAA,OAAO,EAAEgB,cAAhC;AAAgD,IAAA,GAAG,EAAEoC,OAAO,CAAC,0BAAD,CAA5D;AAA0F,IAAA,SAAS,EAAC,eAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ,CAdR,CADJ;AAyBH,CApJD;;AAsJA,eAAe5D,gBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './CardListResponse.css'\nimport url from '../../../../../api/url';\nimport origin from '../../../../../api/origin';\nimport ContentEditable from 'react-contenteditable'\nimport useGlobalState from '../../../../../hooks/useGlobalState';\nimport useGlobalStateAddingCard from '../../../../../hooks/useGlobalStateAddingCard';\n\nconst CardListResponse = (props) => {\n    const [contentEditable] = useState(React.createRef())\n    const [inputValue, setInputValue] = useState({html: props.content})\n    const [classIconUpdate] = useState('updateIconRes')\n    const [classJoinRes, setClassJoinRes] = useState('joinIconRes')\n    const { connectClassActive } = useGlobalState();\n    const {addingCard} = useGlobalStateAddingCard()\n    const [updating, setUpdating] = useState(false)\n    const [userId, setUserId] = useState()\n    const [modelId, setModelId] = useState()\n    const [token, setToken] = useState()\n\n    useEffect(() => {\n        if(localStorage.getItem('userId')){\n            setUserId(localStorage.getItem('userId'))\n            setToken(localStorage.getItem('token'))\n        } else {\n            setUserId(sessionStorage.getItem('userId'))\n            setToken(sessionStorage.getItem('token'))\n        }\n        setModelId(sessionStorage.getItem('modelId'))\n    }, [])\n    \n    const deleteResponse = async () => {\n        if(window.confirm(`es tu sûrs de vouloir supprimer la réponses ${props.content} et toutes ses relations ?`)){\n            fetch(`${url}/relation/deleteAllRelationResponse/${props.id}/${userId}/${modelId}`, {\n                method: 'DELETE',\n                headers: {\n                  'Content-Type' :'application/json',\n                  'Acces-Control-Allow-Origin' : {origin},\n                  'authorization': token\n                }\n            })\n            fetch(`${url}/container/deleteContainerRelationResponse/${props.id}/${userId}/${modelId}`, {\n                method: 'DELETE',\n                headers: {\n                  'Content-Type' :'application/json',\n                  'Acces-Control-Allow-Origin' : {origin},\n                  'authorization': token\n                }\n            })\n            fetch(`${url}/response/delete/${props.id}/${userId}/${modelId}`, {\n                method: 'DELETE',\n                headers: {\n                  'Content-Type' :'application/json',\n                  'Acces-Control-Allow-Origin' : {origin},\n                  'authorization': token\n                }\n            })\n            addingCard()\n            setTimeout(() => {\n                document.location.reload(true)\n            }, 200)\n        }\n    }\n\n    const ValidUpdateResponse = () => {\n            fetch(`${url}/response/update/${props.id}/${userId}/${modelId}`, {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': `${origin}`,\n                  'authorization': token\n                },\n                body: JSON.stringify({\n                content: inputValue.html\n                })\n            })\n            addingCard()\n            setUpdating(false)\n        }\n\n    const updateResponse = () => {\n        setUpdating(true)\n    }\n\n    const changeInput = (event) => {\n        setInputValue({html: event.target.value})\n    }\n\n    const joinResponse = () => {\n        let valid = true\n        fetch(`${url}/relation/find/${userId}/${modelId}`)\n        .then(res => res.json())\n        .then(res => {\n            for(let i = 0; i < res.length; i++){\n                if(res[i].response_id === props.id){\n                    valid = false\n                }\n                console.log(valid)\n            }\n            if(valid === true){\n                setClassJoinRes('joinIconResActive')\n                connectClassActive()\n                try{\n                    fetch(`${url}/relation/add`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type' :'application/json',\n                        'Acces-Control-Allow-Origin' : {origin},\n                        'authorization': token\n                    },\n                    body: JSON.stringify({\n                        response_id : props.id,\n                        onChange : true,\n                        user_id : userId,\n                        model_id : modelId\n                    })\n                    });\n                } catch (error)  {\n                    console.log(error);\n            }\n            } else {\n                alert('reponse déja attribuée')\n            }\n            \n        })\n    }\n\n    onmousedown = function(event) {\n        setClassJoinRes('joinIconRes')\n    }\n\n    return(\n        <div className=\"containerCardList\">\n            {updating === true ?\n                <div className=\"contentCardList\">\n                    <ContentEditable\n                    className=\"contentQuestionInput\"\n                    innerRef={contentEditable}\n                    html={inputValue.html}\n                    disabled={false}\n                    onChange={changeInput}\n                    tagName='article'\n                    />\n                    <button onClick={ValidUpdateResponse} className=\"validUpdateCardRes\">Valider</button>\n                </div>\n            :\n                <div className=\"contentCardList\">\n                    <p className=\"textTitleCardRes\">{props.content}</p>\n                    <div className=\"containericon\">\n                        <img alt=\"join icon\" onClick={joinResponse} src={require('../image/join_icon.png')} className={classJoinRes}/>\n                        <img alt=\"update icon\" onClick={updateResponse} src={require('../image/update_icon.png')} className={classIconUpdate}/>\n                        <img alt=\"delete icon\" onClick={deleteResponse} src={require('../image/delete_icon.png')} className=\"deleteIconRes\"/>\n                    </div>\n                </div>}\n        </div>\n    )\n}\n\nexport default CardListResponse;"]},"metadata":{},"sourceType":"module"}