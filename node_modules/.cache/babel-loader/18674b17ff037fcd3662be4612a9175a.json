{"ast":null,"code":"var _jsxFileName = \"/home/thomas/navebe/front/src/components/creating_area/ListStock/ListStock.js\";\nimport React, { useState, useEffect } from \"react\";\nimport url from '../../../api/url';\nimport CardListQuestion from './cardList/CardListQuestion/CardListQuestion';\nimport CardListResponse from './cardList/CardListResponse/CardListResponse';\nimport CardListCategory from './cardList/CardListCategory/CardListCategory';\nimport useGlobalStateAddingCard from '../../../hooks/useGlobalStateAddingCard';\nimport Question from '../question/Question';\nimport Response from '../response/Response';\nimport './ListStock.css';\nimport AddCategory from \"./cardList/CardListCategory/addCategory/AddCategory\";\n\nconst Area = () => {\n  const [classButtonQuestion, setClassButtonQuestion] = useState('buttonQuestion');\n  const [classButtonResponse, setClassButtonResponse] = useState('buttonResponse');\n  const [classButtonDestination, setClassButtonDestination] = useState('buttonDestination');\n  const [nameSection, setNameSection] = useState('Questions');\n  const [questions, setQuestions] = useState();\n  const [responses, setResponses] = useState();\n  const [categorys, setCategorys] = useState();\n  const [selected, setSelected] = useState(-1);\n  const {\n    addingCardFinish,\n    addingCardState\n  } = useGlobalStateAddingCard();\n  const [userId, setUserId] = useState();\n  const [modelId, setModelId] = useState();\n  const [token, setToken] = useState();\n  useEffect(() => {\n    if (localStorage.getItem('userId')) {\n      setUserId(localStorage.getItem('userId'));\n      setToken(localStorage.getItem('token'));\n    } else {\n      setUserId(sessionStorage.getItem('userId'));\n      setToken(sessionStorage.getItem('token'));\n    }\n\n    setModelId(sessionStorage.getItem('modelId'));\n  }, []);\n  useEffect(() => {\n    setClassButtonQuestion('buttonQuestionActive');\n    setClassButtonResponse('buttonResponse');\n    setClassButtonDestination('buttonDestination');\n    setNameSection('Questions');\n    setResponses(null);\n    setCategorys(null);\n    fetch(`${url}/question/findAll/${userId}/${modelId}`).then(res => res.json()).then(res => {\n      setQuestions(res);\n    });\n  }, [userId, modelId]);\n\n  const changeToQuestions = () => {\n    setClassButtonQuestion('buttonQuestionActive');\n    setClassButtonResponse('buttonResponse');\n    setClassButtonDestination('buttonDestination');\n    setNameSection('Questions');\n    setResponses(null);\n    setCategorys(null);\n    fetch(`${url}/question/findAll/${userId}/${modelId}`).then(res => res.json()).then(res => {\n      console.log(res);\n      setQuestions(res);\n    });\n  };\n\n  const changeToResponse = () => {\n    setClassButtonResponse('buttonResponseActive');\n    setClassButtonQuestion('buttonQuestion');\n    setClassButtonDestination('buttonDestination');\n    setNameSection('Réponses');\n    setQuestions(null);\n    setCategorys(null);\n    fetch(`${url}/response/findAll/${userId}/${modelId}`).then(res => res.json()).then(res => {\n      console.log(res);\n      setResponses(res);\n    });\n  };\n\n  const changeToDestination = () => {\n    setClassButtonDestination('buttonDestinationActive');\n    setClassButtonQuestion('buttonQuestion');\n    setClassButtonResponse('buttonResponse');\n    setNameSection('Destinations');\n    setQuestions(null);\n    setResponses(null);\n    fetch(`${url}/category/findAll/${userId}/${modelId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Acces-Control-Allow-Origin': {\n          origin\n        },\n        'authorization': token\n      }\n    }).then(res => res.json()).then(res => setCategorys(res));\n  };\n\n  useEffect(() => {\n    addingCardFinish();\n\n    if (responses) {\n      fetch(`${url}/response/findAll/${userId}/${modelId}`).then(res => res.json()).then(res => {\n        setResponses(res);\n      });\n    }\n\n    if (categorys) {\n      fetch(`${url}/category/findAll/${userId}/${modelId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Acces-Control-Allow-Origin': {\n            origin\n          },\n          'authorization': token\n        }\n      }).then(res => res.json()).then(res => setCategorys(res));\n    }\n\n    if (questions) {\n      fetch(`${url}/question/findAll/${userId}/${modelId}`).then(res => res.json()).then(res => {\n        setQuestions(res);\n      });\n    }\n  }, [addingCardState, userId, modelId]);\n  return React.createElement(\"div\", {\n    className: \"containerListStock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"headList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"textHeadList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, nameSection), React.createElement(\"div\", {\n    className: \"containerButtonSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: classButtonQuestion,\n    onClick: changeToQuestions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Questions\"), React.createElement(\"button\", {\n    className: classButtonResponse,\n    onClick: changeToResponse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"R\\xE9ponses\"), React.createElement(\"button\", {\n    className: classButtonDestination,\n    onClick: changeToDestination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Cat\\xE9gories\"))), React.createElement(\"div\", {\n    className: \"containerList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, nameSection === \"Questions\" && React.createElement(Question, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), nameSection === \"Réponses\" && React.createElement(Response, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), Array.isArray(questions) && questions.map(question => {\n    return React.createElement(CardListQuestion, {\n      id: question.id,\n      content: question.content,\n      changeSelected: () => setSelected(question.id),\n      selected: selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    });\n  }), Array.isArray(responses) && responses.map(response => {\n    return React.createElement(CardListResponse, {\n      id: response.id,\n      content: response.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    });\n  }), nameSection === \"Destina\" && React.createElement(AddCategory, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), Array.isArray(categorys) && categorys.map(category => {\n    return React.createElement(CardListCategory, {\n      id: category.id,\n      name: category.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default Area;","map":{"version":3,"sources":["/home/thomas/navebe/front/src/components/creating_area/ListStock/ListStock.js"],"names":["React","useState","useEffect","url","CardListQuestion","CardListResponse","CardListCategory","useGlobalStateAddingCard","Question","Response","AddCategory","Area","classButtonQuestion","setClassButtonQuestion","classButtonResponse","setClassButtonResponse","classButtonDestination","setClassButtonDestination","nameSection","setNameSection","questions","setQuestions","responses","setResponses","categorys","setCategorys","selected","setSelected","addingCardFinish","addingCardState","userId","setUserId","modelId","setModelId","token","setToken","localStorage","getItem","sessionStorage","fetch","then","res","json","changeToQuestions","console","log","changeToResponse","changeToDestination","method","headers","origin","Array","isArray","map","question","id","content","response","category","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,iBAAP;AACA,OAAOC,WAAP,MAAwB,qDAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDZ,QAAQ,CAAC,gBAAD,CAA9D;AACA,QAAM,CAACa,mBAAD,EAAsBC,sBAAtB,IAAgDd,QAAQ,CAAC,gBAAD,CAA9D;AACA,QAAM,CAACe,sBAAD,EAAyBC,yBAAzB,IAAsDhB,QAAQ,CAAC,mBAAD,CAApE;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,WAAD,CAA9C;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,EAA1C;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,EAA1C;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,EAA1C;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,CAAC,CAAF,CAAxC;AACA,QAAM;AAAC2B,IAAAA,gBAAD;AAAmBC,IAAAA;AAAnB,MAAsCtB,wBAAwB,EAApE;AACA,QAAM,CAACuB,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,EAApC;AACA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,EAAtC;AACA,QAAM,CAACiC,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACV,QAAGkC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAH,EAAkC;AAC9BN,MAAAA,SAAS,CAACK,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CAAT;AACAF,MAAAA,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAR;AACH,KAHD,MAGO;AACHN,MAAAA,SAAS,CAACO,cAAc,CAACD,OAAf,CAAuB,QAAvB,CAAD,CAAT;AACAF,MAAAA,QAAQ,CAACG,cAAc,CAACD,OAAf,CAAuB,OAAvB,CAAD,CAAR;AACH;;AACDJ,IAAAA,UAAU,CAACK,cAAc,CAACD,OAAf,CAAuB,SAAvB,CAAD,CAAV;AACH,GATM,EASJ,EATI,CAAT;AAWAnC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,sBAAsB,CAAC,sBAAD,CAAtB;AACAE,IAAAA,sBAAsB,CAAC,gBAAD,CAAtB;AACAE,IAAAA,yBAAyB,CAAC,mBAAD,CAAzB;AACAE,IAAAA,cAAc,CAAC,WAAD,CAAd;AACAI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAc,IAAAA,KAAK,CAAE,GAAEpC,GAAI,qBAAoB2B,MAAO,IAAGE,OAAQ,EAA9C,CAAL,CACCQ,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AAACpB,MAAAA,YAAY,CAACoB,GAAD,CAAZ;AAAkB,KAFhC;AAGD,GAXQ,EAWN,CAACX,MAAD,EAASE,OAAT,CAXM,CAAT;;AAaA,QAAMW,iBAAiB,GAAG,MAAM;AAC9B9B,IAAAA,sBAAsB,CAAC,sBAAD,CAAtB;AACAE,IAAAA,sBAAsB,CAAC,gBAAD,CAAtB;AACAE,IAAAA,yBAAyB,CAAC,mBAAD,CAAzB;AACAE,IAAAA,cAAc,CAAC,WAAD,CAAd;AACAI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAc,IAAAA,KAAK,CAAE,GAAEpC,GAAI,qBAAoB2B,MAAO,IAAGE,OAAQ,EAA9C,CAAL,CACCQ,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACApB,MAAAA,YAAY,CAACoB,GAAD,CAAZ;AAAkB,KAJtB;AAKD,GAbD;;AAeA,QAAMK,gBAAgB,GAAG,MAAM;AAC7B/B,IAAAA,sBAAsB,CAAC,sBAAD,CAAtB;AACAF,IAAAA,sBAAsB,CAAC,gBAAD,CAAtB;AACAI,IAAAA,yBAAyB,CAAC,mBAAD,CAAzB;AACAE,IAAAA,cAAc,CAAC,UAAD,CAAd;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAc,IAAAA,KAAK,CAAE,GAAEpC,GAAI,qBAAoB2B,MAAO,IAAGE,OAAQ,EAA9C,CAAL,CACCQ,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAlB,MAAAA,YAAY,CAACkB,GAAD,CAAZ;AAAkB,KAJtB;AAKD,GAbD;;AAeA,QAAMM,mBAAmB,GAAG,MAAM;AAChC9B,IAAAA,yBAAyB,CAAC,yBAAD,CAAzB;AACAJ,IAAAA,sBAAsB,CAAC,gBAAD,CAAtB;AACAE,IAAAA,sBAAsB,CAAC,gBAAD,CAAtB;AACAI,IAAAA,cAAc,CAAC,cAAD,CAAd;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEEgB,IAAAA,KAAK,CAAE,GAAEpC,GAAI,qBAAoB2B,MAAO,IAAGE,OAAQ,EAA9C,EAAkD;AACrDgB,MAAAA,MAAM,EAAE,KAD6C;AAErDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,sCAA+B;AAACC,UAAAA;AAAD,SAFxB;AAGP,yBAAiBhB;AAHV;AAF4C,KAAlD,CAAL,CAOCM,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMC,GAAG,IAAIhB,YAAY,CAACgB,GAAD,CARzB;AASH,GAjBD;;AAmBAvC,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,gBAAgB;;AAEhB,QAAGN,SAAH,EAAa;AACXiB,MAAAA,KAAK,CAAE,GAAEpC,GAAI,qBAAoB2B,MAAO,IAAGE,OAAQ,EAA9C,CAAL,CACCQ,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AAAClB,QAAAA,YAAY,CAACkB,GAAD,CAAZ;AAAkB,OAFhC;AAGD;;AAGD,QAAGjB,SAAH,EAAa;AACXe,MAAAA,KAAK,CAAE,GAAEpC,GAAI,qBAAoB2B,MAAO,IAAGE,OAAQ,EAA9C,EAAkD;AACrDgB,QAAAA,MAAM,EAAE,KAD6C;AAErDC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,wCAA+B;AAACC,YAAAA;AAAD,WAFxB;AAGP,2BAAiBhB;AAHV;AAF4C,OAAlD,CAAL,CAOCM,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMC,GAAG,IAAIhB,YAAY,CAACgB,GAAD,CARzB;AASD;;AAED,QAAGrB,SAAH,EAAa;AACXmB,MAAAA,KAAK,CAAE,GAAEpC,GAAI,qBAAoB2B,MAAO,IAAGE,OAAQ,EAA9C,CAAL,CACCQ,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AAACpB,QAAAA,YAAY,CAACoB,GAAD,CAAZ;AAAkB,OAFhC;AAGD;AAEF,GA5BQ,EA4BP,CAACZ,eAAD,EAAkBC,MAAlB,EAA0BE,OAA1B,CA5BO,CAAT;AA+BA,SACM;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6Bd,WAA7B,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAEN,mBAAnB;AAAwC,IAAA,OAAO,EAAE+B,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,IAAA,SAAS,EAAE7B,mBAAnB;AAAwC,IAAA,OAAO,EAAEgC,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAQ,IAAA,SAAS,EAAE9B,sBAAnB;AAA2C,IAAA,OAAO,EAAE+B,mBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CAFF,CADJ,EASI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK7B,WAAW,KAAK,WAAhB,IACD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKA,WAAW,KAAK,UAAhB,IACD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKiC,KAAK,CAACC,OAAN,CAAchC,SAAd,KACAA,SAAS,CAACiC,GAAV,CAAcC,QAAQ,IAAI;AACxB,WACC,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAEA,QAAQ,CAACC,EAA/B;AAAmC,MAAA,OAAO,EAAED,QAAQ,CAACE,OAArD;AAA8D,MAAA,cAAc,EAAE,MAAM7B,WAAW,CAAC2B,QAAQ,CAACC,EAAV,CAA/F;AAA8G,MAAA,QAAQ,EAAE7B,QAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGF,GAJA,CANL,EAWKyB,KAAK,CAACC,OAAN,CAAc9B,SAAd,KACAA,SAAS,CAAC+B,GAAV,CAAcI,QAAQ,IAAI;AACxB,WACC,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAEA,QAAQ,CAACF,EAA/B;AAAmC,MAAA,OAAO,EAAEE,QAAQ,CAACD,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGF,GAJA,CAZL,EAiBKtC,WAAW,KAAK,SAAhB,IAA6B,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBlC,EAkBKiC,KAAK,CAACC,OAAN,CAAc5B,SAAd,KACAA,SAAS,CAAC6B,GAAV,CAAcK,QAAQ,IAAI;AACxB,WACC,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAEA,QAAQ,CAACH,EAA/B;AAAmC,MAAA,IAAI,EAAEG,QAAQ,CAACC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGF,GAJA,CAnBL,CATJ,CADN;AAqCD,CA3JD;;AA6JA,eAAehD,IAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport url from '../../../api/url';\nimport CardListQuestion from './cardList/CardListQuestion/CardListQuestion';\nimport CardListResponse from './cardList/CardListResponse/CardListResponse';\nimport CardListCategory from './cardList/CardListCategory/CardListCategory';\nimport useGlobalStateAddingCard from '../../../hooks/useGlobalStateAddingCard';\nimport Question from '../question/Question'\nimport Response from '../response/Response'\nimport './ListStock.css'\nimport AddCategory from \"./cardList/CardListCategory/addCategory/AddCategory\";\n\nconst Area = () => {\n  const [classButtonQuestion, setClassButtonQuestion] = useState('buttonQuestion')\n  const [classButtonResponse, setClassButtonResponse] = useState('buttonResponse')\n  const [classButtonDestination, setClassButtonDestination] = useState('buttonDestination')\n  const [nameSection, setNameSection] = useState('Questions')\n  const [questions, setQuestions] = useState()\n  const [responses, setResponses] = useState()\n  const [categorys, setCategorys] = useState()\n  const [selected, setSelected] = useState(-1)\n  const {addingCardFinish, addingCardState} = useGlobalStateAddingCard()\n  const [userId, setUserId] = useState()\n  const [modelId, setModelId] = useState()\n  const [token, setToken] = useState()\n  \n  useEffect(() => {\n        if(localStorage.getItem('userId')){\n            setUserId(localStorage.getItem('userId'))\n            setToken(localStorage.getItem('token'))\n        } else {\n            setUserId(sessionStorage.getItem('userId'))\n            setToken(sessionStorage.getItem('token'))\n        }\n        setModelId(sessionStorage.getItem('modelId'))\n    }, [])\n\n  useEffect(() => {\n    setClassButtonQuestion('buttonQuestionActive');\n    setClassButtonResponse('buttonResponse');\n    setClassButtonDestination('buttonDestination');\n    setNameSection('Questions')\n    setResponses(null)\n    setCategorys(null)\n\n    fetch(`${url}/question/findAll/${userId}/${modelId}`)\n    .then(res => res.json())\n    .then(res => {setQuestions(res)})\n  }, [userId, modelId])\n\n  const changeToQuestions = () => {\n    setClassButtonQuestion('buttonQuestionActive');\n    setClassButtonResponse('buttonResponse');\n    setClassButtonDestination('buttonDestination');\n    setNameSection('Questions')\n    setResponses(null)\n    setCategorys(null)\n\n    fetch(`${url}/question/findAll/${userId}/${modelId}`)\n    .then(res => res.json())\n    .then(res => {\n        console.log(res)\n        setQuestions(res)})\n  }\n\n  const changeToResponse = () => {\n    setClassButtonResponse('buttonResponseActive');\n    setClassButtonQuestion('buttonQuestion');\n    setClassButtonDestination('buttonDestination');\n    setNameSection('Réponses')\n    setQuestions(null)\n    setCategorys(null)\n\n    fetch(`${url}/response/findAll/${userId}/${modelId}`)\n    .then(res => res.json())\n    .then(res => {\n        console.log(res)\n        setResponses(res)})\n  }\n\n  const changeToDestination = () => {\n    setClassButtonDestination('buttonDestinationActive');\n    setClassButtonQuestion('buttonQuestion');\n    setClassButtonResponse('buttonResponse');\n    setNameSection('Destinations')\n    setQuestions(null)\n    setResponses(null)\n\n      fetch(`${url}/category/findAll/${userId}/${modelId}`,  {\n        method: 'GET',\n        headers: {\n          'Content-Type' :'application/json',\n          'Acces-Control-Allow-Origin' : {origin},\n          'authorization': token\n        }})\n      .then(res => res.json())\n      .then(res => setCategorys(res))\n  }\n\n  useEffect(() => {\n    addingCardFinish()\n\n    if(responses){\n      fetch(`${url}/response/findAll/${userId}/${modelId}`)\n      .then(res => res.json())\n      .then(res => {setResponses(res)})\n    }\n    \n\n    if(categorys){\n      fetch(`${url}/category/findAll/${userId}/${modelId}`,  {\n        method: 'GET',\n        headers: {\n          'Content-Type' :'application/json',\n          'Acces-Control-Allow-Origin' : {origin},\n          'authorization': token\n        }})\n      .then(res => res.json())\n      .then(res => setCategorys(res))\n    }\n\n    if(questions){\n      fetch(`${url}/question/findAll/${userId}/${modelId}`)\n      .then(res => res.json())\n      .then(res => {setQuestions(res)})\n    }\n    \n  },[addingCardState, userId, modelId])\n\n\n  return(\n        <div className=\"containerListStock\">\n            <div className=\"headList\">\n              <p className=\"textHeadList\">{nameSection}</p>\n              <div className=\"containerButtonSection\">\n                  <button className={classButtonQuestion} onClick={changeToQuestions}>Questions</button>\n                  <button className={classButtonResponse} onClick={changeToResponse}>Réponses</button>\n                  <button className={classButtonDestination} onClick={changeToDestination}>Catégories</button>\n              </div>\n            </div>\n            <div className=\"containerList\">\n                {nameSection === \"Questions\" &&\n                <Question/>}\n                {nameSection === \"Réponses\" &&\n                <Response/>}\n                {Array.isArray(questions) &&\n                 questions.map(question => {\n                   return(\n                    <CardListQuestion id={question.id} content={question.content} changeSelected={() => setSelected(question.id)} selected={selected}/>\n                   )\n                })}\n                {Array.isArray(responses) &&\n                 responses.map(response => {\n                   return(\n                    <CardListResponse id={response.id} content={response.content}/>\n                   )\n                })}\n                {nameSection === \"Destina\" && <AddCategory/>}\n                {Array.isArray(categorys) &&\n                 categorys.map(category => {\n                   return(\n                    <CardListCategory id={category.id} name={category.name}/>\n                   )\n                })}\n            </div>\n        </div>\n  );\n};\n\nexport default Area;"]},"metadata":{},"sourceType":"module"}