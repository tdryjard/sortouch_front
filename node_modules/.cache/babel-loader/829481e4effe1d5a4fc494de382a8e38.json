{"ast":null,"code":"var _jsxFileName = \"/home/thomas/navebe/front/src/components/models_area/card_model/CardModel.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport url from '../../../api/url';\nimport origin from '../../../api/origin';\nimport { Redirect } from 'react-router-dom';\nimport './CardModel.scss';\n\nconst CardModel = props => {\n  const [optionSelected, setOptionSelected] = useState(false);\n  const [inputValue, setInputValue] = useState({\n    html: props.name\n  });\n  const [contentEditable] = useState(React.createRef());\n  const [copied, setCopied] = useState(false);\n  const [unview, setUnview] = useState([]);\n  const [categorys, setCategorys] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    if (localStorage.getItem('userId')) {\n      setUserId(localStorage.getItem('userId'));\n    } else {\n      setUserId(sessionStorage.getItem('userId'));\n    }\n\n    setTimeout(() => {}, 300);\n  }, []);\n  const linkRef = useRef(null);\n\n  const changeInput = event => {\n    setInputValue({\n      html: event.target.value\n    });\n  };\n\n  useEffect(() => {\n    fetch(`${url}/category/findAll/${userId}/${props.id}`).then(res => res.json()).then(res => setCategorys(res));\n  }, [props.id, userId]);\n  useEffect(() => {\n    console.log('dalu');\n    let stockUnview = [];\n    console.log(categorys);\n\n    for (let n = 1; n < categorys.length + 1; n++) {\n      console.log(`${url}/mail/find/${userId}/${props.id}/${n}`);\n      fetch(`${url}/mail/find/${userId}/${props.id}/${n}`).then(res => res.json()).then(res => {\n        console.log(res);\n        let nb = 0;\n\n        for (let i = 0; i < res.length; i++) {\n          if (res[i].view === 0) nb++;\n        }\n\n        stockUnview.push(nb);\n      });\n    }\n\n    setTimeout(() => {\n      let nbTT = 0;\n\n      for (let i = 0; i < stockUnview.length; i++) {\n        nbTT += stockUnview[i];\n      }\n\n      setUnview(nbTT);\n    }, 200);\n  }, [categorys, userId, props.id]);\n  console.log(unview);\n\n  const deleteModel = event => {\n    if (window.confirm('voulez vous supprimer ce model ?')) {\n      const modelId = parseInt(event.target.id.replace('model', ''));\n      fetch(`${url}/model/delete/${modelId}/${userId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Acces-Control-Allow-Origin': {\n            origin\n          }\n        }\n      });\n    }\n\n    window.location.reload();\n  };\n\n  const updateModel = event => {\n    const modelId = parseInt(event.target.id.replace('model', ''));\n    console.log(`${url}/model/update/${modelId}/${userId}`);\n    fetch(`${url}/model/update/${modelId}/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': `${origin}`\n      },\n      body: JSON.stringify({\n        name: inputValue.html\n      })\n    });\n    window.location.reload();\n  };\n\n  const clipboard = e => {\n    linkRef.current.select();\n    document.execCommand('copy'); // This is just personal preference.\n    // I prefer to not show the the whole text area selected.\n\n    e.target.focus();\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 2000);\n  };\n\n  const cardSelect = () => {\n    sessionStorage.setItem('modelId', props.id);\n    setTimeout(() => {\n      setRedirect(true);\n    }, 1000);\n  };\n\n  return React.createElement(React.Fragment, null, optionSelected === false ? React.createElement(\"div\", {\n    onclick: window.innerWidth,\n    className: props.index === 0 ? \"contentCardModelFirst\" : \"contentCardModel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"headCardModel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentNewMessageModel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require('../../message_space/image/newMessage_icon.png'),\n    className: \"newMessageIconModel\",\n    alt: \"new message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"nbNewMessageModel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, unview))), React.createElement(\"div\", {\n    className: \"infoCardModel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerHeadCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerLink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, copied && React.createElement(\"p\", {\n    className: \"messageCopied\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"copi\\xE9\"), React.createElement(\"img\", {\n    alt: \"link icon\",\n    onClick: clipboard,\n    src: require('./image/link_icon.png'),\n    className: \"linkIcon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: linkRef,\n    className: \"textLink\",\n    value: `/chatbot/w${props.id * 48 / 16 + 150}&${props.id * 8 / 4 + 150}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"contentNameCardModel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"nameCardModel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, props.name)), redirect && React.createElement(Redirect, {\n    state: props.id,\n    to: \"/mails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: cardSelect,\n    className: \"buttonSelectModel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Selectionner\"), React.createElement(\"div\", {\n    className: \"containerOption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: () => {\n      setOptionSelected(true);\n    },\n    className: \"optionIcon\",\n    src: require('./image/option_icon.png'),\n    alt: \"option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })))) : React.createElement(\"div\", {\n    className: props.index === 0 ? \"contentCardModelOptionFirst\" : \"contentCardModelOption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: () => {\n      setOptionSelected(false);\n    },\n    className: \"croixIcon\",\n    src: require('./image/croix_icon.png'),\n    alt: \"option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(ContentEditable, {\n    className: \"inputAddModel\",\n    innerRef: contentEditable,\n    html: inputValue.html,\n    disabled: false,\n    onChange: changeInput,\n    tagName: \"article\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: updateModel,\n    id: `model${props.id}`,\n    className: \"buttonUpdateModel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Valider changement\"), React.createElement(\"button\", {\n    id: `model${props.id}`,\n    className: \"deleteButton\",\n    onClick: deleteModel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Supprimer le model\")));\n};\n\nexport default CardModel;","map":{"version":3,"sources":["/home/thomas/navebe/front/src/components/models_area/card_model/CardModel.js"],"names":["React","useRef","useState","useEffect","ContentEditable","url","origin","Redirect","CardModel","props","optionSelected","setOptionSelected","inputValue","setInputValue","html","name","contentEditable","createRef","copied","setCopied","unview","setUnview","categorys","setCategorys","redirect","setRedirect","userId","setUserId","localStorage","getItem","sessionStorage","setTimeout","linkRef","changeInput","event","target","value","fetch","id","then","res","json","console","log","stockUnview","n","length","nb","i","view","push","nbTT","deleteModel","window","confirm","modelId","parseInt","replace","method","headers","location","reload","updateModel","body","JSON","stringify","clipboard","e","current","select","document","execCommand","focus","cardSelect","setItem","innerWidth","index","require"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react'\nimport ContentEditable from 'react-contenteditable'\nimport url from '../../../api/url'\nimport origin from '../../../api/origin'\nimport { Redirect } from 'react-router-dom'\nimport './CardModel.scss'\n\n\nconst CardModel = (props) => {\n    const [optionSelected, setOptionSelected] = useState(false)\n    const [inputValue, setInputValue] = useState({html: props.name})\n    const [contentEditable] = useState(React.createRef())\n    const [copied, setCopied] = useState(false)\n    const [unview, setUnview] = useState([])\n    const [categorys, setCategorys] = useState([])\n    const [redirect, setRedirect] = useState(false)\n    const [userId, setUserId] = useState()\n\n    useEffect(() => {\n        if(localStorage.getItem('userId')){\n            setUserId(localStorage.getItem('userId'))\n        } else {\n            setUserId(sessionStorage.getItem('userId'))\n        }\n        setTimeout(() => {\n\n        }, 300)\n    }, [])\n\n\n    const linkRef = useRef(null);\n\n    const changeInput = (event) => {\n        setInputValue({html: event.target.value})\n    }\n\n    useEffect(() => {\n        fetch(`${url}/category/findAll/${userId}/${props.id}`)\n        .then(res => res.json())\n        .then(res => setCategorys(res))\n    }, [props.id, userId])\n\n    useEffect(() => {\n        console.log('dalu')\n        let stockUnview = []\n        console.log(categorys)\n        for(let n = 1; n < categorys.length + 1; n++){\n            console.log(`${url}/mail/find/${userId}/${props.id}/${n}`)\n            fetch(`${url}/mail/find/${userId}/${props.id}/${n}`)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res)\n            let nb = 0\n            for(let i = 0; i < res.length; i++){\n                if(res[i].view === 0) nb++\n            }\n            stockUnview.push(nb)\n        })\n        }\n        setTimeout(() => {\n            let nbTT = 0\n            for(let i = 0; i < stockUnview.length; i++){\n                nbTT+=stockUnview[i]\n            }\n            setUnview(nbTT)\n        }, 200)\n    }, [categorys, userId, props.id])\n\n    console.log(unview)\n\n    const deleteModel = (event) => {\n        if(window.confirm('voulez vous supprimer ce model ?')){\n            const modelId = parseInt(event.target.id.replace('model', ''))\n            fetch(`${url}/model/delete/${modelId}/${userId}`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type' :'application/json',\n              'Acces-Control-Allow-Origin' : {origin}\n            }\n          })\n        }\n        window.location.reload()\n    }\n\n    const updateModel = (event) => {\n        const modelId = parseInt(event.target.id.replace('model', ''))\n        console.log(`${url}/model/update/${modelId}/${userId}`)\n        fetch(`${url}/model/update/${modelId}/${userId}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': `${origin}`\n            },\n            body: JSON.stringify({\n            name: inputValue.html\n            })\n        })\n        window.location.reload()\n    }\n\n    const clipboard = (e) => {\n        linkRef.current.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the the whole text area selected.\n        e.target.focus();\n        setCopied(true)\n        setTimeout(() => {\n            setCopied(false)\n        }, 2000)\n    }\n\n    const cardSelect = () => {\n        sessionStorage.setItem('modelId', props.id)\n        setTimeout(() => {\n            setRedirect(true)\n        }, 1000)\n    }\n\n    return(\n        <>\n        {optionSelected === false ?\n        <div onclick={window.innerWidth} className={props.index === 0 ? \"contentCardModelFirst\" : \"contentCardModel\"}>\n            <div className=\"headCardModel\">\n                <div className=\"contentNewMessageModel\">\n                    <img src={require('../../message_space/image/newMessage_icon.png')} className=\"newMessageIconModel\" alt=\"new message\"/>\n                    <p className=\"nbNewMessageModel\">{unview}</p>\n                </div>\n            </div>\n            <div className=\"infoCardModel\">\n                <div className=\"containerHeadCard\">\n                    <div className=\"containerLink\">\n                        {copied && <p className=\"messageCopied\">copié</p>}\n                        <img alt=\"link icon\" onClick={clipboard} src={require('./image/link_icon.png')} className=\"linkIcon\"/>\n                        <input ref={linkRef} className=\"textLink\" value={`/chatbot/w${props.id*48/16+150}&${props.id*8/4+150}`}/>\n                    </div>\n                </div>\n            \n                <div className=\"contentNameCardModel\"><p className=\"nameCardModel\">{props.name}</p></div>\n                {redirect && <Redirect \n                state={props.id} to=\"/mails\"/>}\n                <button onClick={cardSelect} className=\"buttonSelectModel\">Selectionner</button>\n                <div className=\"containerOption\">\n                    <img onClick={() => {setOptionSelected(true)}} className=\"optionIcon\" src={require('./image/option_icon.png')} alt=\"option\"/>\n                </div>\n            </div>\n        </div>\n        :\n        <div className={props.index === 0 ? \"contentCardModelOptionFirst\" : \"contentCardModelOption\"}>\n            <img onClick={() => {setOptionSelected(false)}} className=\"croixIcon\" src={require('./image/croix_icon.png')} alt=\"option\"/>\n            <ContentEditable\n                className=\"inputAddModel\"\n                innerRef={contentEditable}\n                html={inputValue.html}\n                disabled={false}\n                onChange={changeInput}\n                tagName='article'\n            />\n            <button onClick={updateModel} id={`model${props.id}`} className=\"buttonUpdateModel\">Valider changement</button>\n            <button id={`model${props.id}`} className=\"deleteButton\" onClick={deleteModel}>Supprimer le model</button>\n        </div>}\n        </>\n    )\n}\n\nexport default CardModel"]},"metadata":{},"sourceType":"module"}