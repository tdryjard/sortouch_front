{"ast":null,"code":"var _jsxFileName = \"/home/thomas/sortouch_front/src/components/chatbot_area/questionBlock/QuestionChat.js\";\nimport React, { useEffect, useState } from 'react';\n\nconst Questionchat = props => {\n  const [totalQuestion, setTotalQuestion] = useState([]);\n  useEffect(() => {\n    printText(props.text);\n  }, [props.text]);\n\n  const printText = text => {\n    console.log(text);\n\n    if (props.text) {\n      let index = 0;\n      let question = text.split('');\n      console.log(question);\n      let stockQuestion = [];\n      const questionPrint = setInterval(() => {\n        stockQuestion = [...stockQuestion, question[index]];\n        setTotalQuestion([...totalQuestion, stockQuestion]);\n        index++;\n\n        if (index === question.length) {\n          clearInterval(questionPrint);\n          return true;\n        }\n      }, 50);\n      console.log(stockQuestion);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"contentQuestChat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentTextQuestChat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"textQuestChatbot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, totalQuestion)));\n};\n\nexport default Questionchat;","map":{"version":3,"sources":["/home/thomas/sortouch_front/src/components/chatbot_area/questionBlock/QuestionChat.js"],"names":["React","useEffect","useState","Questionchat","props","totalQuestion","setTotalQuestion","printText","text","console","log","index","question","split","stockQuestion","questionPrint","setInterval","length","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,SAAS,CAACH,KAAK,CAACI,IAAP,CAAT;AACH,GAFQ,EAEN,CAACJ,KAAK,CAACI,IAAP,CAFM,CAAT;;AAKA,QAAMD,SAAS,GAAIC,IAAD,IAAU;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAGJ,KAAK,CAACI,IAAT,EAAc;AACV,UAAIG,KAAK,GAAG,CAAZ;AACA,UAAIC,QAAQ,GAAGJ,IAAI,CAACK,KAAL,CAAW,EAAX,CAAf;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACA,UAAIE,aAAa,GAAG,EAApB;AACA,YAAMC,aAAa,GAAGC,WAAW,CAAC,MAAM;AACpCF,QAAAA,aAAa,GAAG,CAAC,GAAGA,aAAJ,EAAmBF,QAAQ,CAACD,KAAD,CAA3B,CAAhB;AACAL,QAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmBS,aAAnB,CAAD,CAAhB;AACAH,QAAAA,KAAK;;AACL,YAAGA,KAAK,KAAKC,QAAQ,CAACK,MAAtB,EAA6B;AACzBC,UAAAA,aAAa,CAACH,aAAD,CAAb;AACA,iBAAO,IAAP;AACH;AACR,OARoC,EAQlC,EARkC,CAAjC;AASJN,MAAAA,OAAO,CAACC,GAAR,CAAYI,aAAZ;AACC;AACJ,GAlBD;;AAoBA,SACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCT,aAAjC,CADJ,CADJ,CADJ;AAOH,CApCD;;AAsCA,eAAeF,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\n\nconst Questionchat = (props) => {\n    const [totalQuestion, setTotalQuestion] = useState([])\n    \n\n    useEffect(() => {\n        printText(props.text)\n    }, [props.text])\n\n\n    const printText = (text) => {\n        console.log(text)\n        if(props.text){\n            let index = 0\n            let question = text.split('')\n            console.log(question)\n            let stockQuestion = []\n            const questionPrint = setInterval(() => {\n                stockQuestion = [...stockQuestion, question[index]]\n                setTotalQuestion([...totalQuestion, stockQuestion])\n                index++\n                if(index === question.length){\n                    clearInterval(questionPrint)\n                    return(true)\n                }\n        }, 50)\n        console.log(stockQuestion)\n        }\n    }\n\n    return(\n        <div className=\"contentQuestChat\">\n            <div className=\"contentTextQuestChat\">\n                <p className=\"textQuestChatbot\">{totalQuestion}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Questionchat"]},"metadata":{},"sourceType":"module"}