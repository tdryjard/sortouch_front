{"ast":null,"code":"var _jsxFileName = \"/home/thomas/navebe/front/src/components/creating_area/ListStock/cardList/CardListCategory/addCategory/AddCategory.js\";\nimport React, { useState, useEffect } from 'react';\nimport url from '../../../../../../api/url';\nimport origin from '../../../../../../api/origin';\nimport ContentEditable from 'react-contenteditable';\nimport useGlobalStateAddingCard from '../../../../../../hooks/useGlobalStateAddingCard';\n\nconst Question = () => {\n  const [contentEditable] = useState(React.createRef());\n  const [userId, setUserId] = useState();\n  const [inputValue, setInputValue] = useState({\n    html: \"\"\n  });\n  const {\n    addingCard\n  } = useGlobalStateAddingCard();\n  const [modelId, setModelId] = useState();\n  const [token, setToken] = useState();\n  useEffect(() => {\n    if (localStorage.getItem('userId')) {\n      setUserId(localStorage.getItem('userId'));\n      setToken(localStorage.getItem('token'));\n    } else {\n      setUserId(sessionStorage.getItem('userId'));\n      setToken(sessionStorage.getItem('token'));\n    }\n\n    setModelId(sessionStorage.getItem('modelId'));\n  }, []);\n\n  const changeInput = event => {\n    setInputValue({\n      html: event.target.value\n    });\n  };\n\n  async function validCategory() {\n    const valueQuestion = {\n      content: inputValue.html,\n      user_id: userId,\n      model_id: modelId\n    };\n\n    try {\n      fetch(url + '/category/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Acces-Control-Allow-Origin': {\n            origin\n          },\n          'authorization': token\n        },\n        body: JSON.stringify(valueQuestion)\n      });\n      addingCard();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"containerCardListCategory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"textAddingQuestion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Ca\"), React.createElement(ContentEditable, {\n    className: \"contentQuestionInput\",\n    innerRef: contentEditable,\n    html: inputValue.html,\n    disabled: false,\n    onChange: changeInput,\n    tagName: \"article\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"validQuestion\",\n    onClick: validCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Ajouter\"));\n};\n\nexport default Question;","map":{"version":3,"sources":["/home/thomas/navebe/front/src/components/creating_area/ListStock/cardList/CardListCategory/addCategory/AddCategory.js"],"names":["React","useState","useEffect","url","origin","ContentEditable","useGlobalStateAddingCard","Question","contentEditable","createRef","userId","setUserId","inputValue","setInputValue","html","addingCard","modelId","setModelId","token","setToken","localStorage","getItem","sessionStorage","changeInput","event","target","value","validCategory","valueQuestion","content","user_id","model_id","fetch","method","headers","body","JSON","stringify","error","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport url from '../../../../../../api/url';\nimport origin from '../../../../../../api/origin';\nimport ContentEditable from 'react-contenteditable'\nimport useGlobalStateAddingCard from '../../../../../../hooks/useGlobalStateAddingCard';\n\nconst Question = () => {\n  const [contentEditable] = useState(React.createRef())\n  const [userId, setUserId] = useState()\n  const [inputValue, setInputValue] = useState({html: \"\"})\n  const { addingCard } = useGlobalStateAddingCard();\n  const [modelId, setModelId] = useState()\n  const [token, setToken] = useState()\n\n  useEffect(() => {\n        if(localStorage.getItem('userId')){\n            setUserId(localStorage.getItem('userId'))\n            setToken(localStorage.getItem('token'))\n        } else {\n            setUserId(sessionStorage.getItem('userId'))\n            setToken(sessionStorage.getItem('token'))\n        }\n        setModelId(sessionStorage.getItem('modelId'))\n    }, [])\n\n    const changeInput = (event) => {\n      setInputValue({html: event.target.value})\n    }\n\n    async function validCategory () {\n\n      const valueQuestion = {\n        content : inputValue.html,\n        user_id : userId,\n        model_id : modelId\n      }\n        try{\n            fetch(url + '/category/add', {\n              method: 'POST',\n              headers: {\n                'Content-Type' :'application/json',\n                'Acces-Control-Allow-Origin' : {origin},\n                'authorization': token\n              },\n              body: JSON.stringify(valueQuestion)\n            });\n            addingCard()\n          } catch (error)  {\n            console.log(error);\n          }\n    }\n\n    \n\n    return(\n       <div className=\"containerCardListCategory\">\n           <p className=\"textAddingQuestion\">Ca</p>\n           <ContentEditable\n            className=\"contentQuestionInput\"\n            innerRef={contentEditable}\n            html={inputValue.html}\n            disabled={false}\n            onChange={changeInput}\n            tagName='article'\n          />\n           <button className=\"validQuestion\" onClick={validCategory}>Ajouter</button>\n           \n       </div>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}