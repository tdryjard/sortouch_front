{"ast":null,"code":"var _jsxFileName = \"/home/thomas/sortouch_front/src/components/creating_area/builder/Builder.js\";\nimport React, { useState, useEffect } from 'react';\nimport url from '../../../api/url';\nimport origin from '../../../api/origin';\nimport useGlobalState from '../../../hooks/useGlobalState';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../../navbar/Navbar';\nimport './card.css';\nimport './builder.scss';\n\nconst Builder = () => {\n  const [containers, setContainers] = useState([]);\n  const [order, setOrder] = useState(1);\n  const {\n    connectClassDisable,\n    classConnectButton\n  } = useGlobalState();\n  const [containersReverse, setContainersReverse] = useState();\n  const [cardsQuest, setCardsQuest] = useState([]);\n  const [cardsRes, setCardsRes] = useState([]);\n  const [cardsCategory, setCardsCategory] = useState([]);\n  const [responseSelect, setResponseSelect] = useState(0);\n  const [responseSelectChanging, setResponseSelectChanging] = useState(false);\n  const [storageContainers, setStorageContainers] = useState([]);\n  const [responseSelected, setResponseSelected] = useState([]);\n  const [responseBool, setResponseBool] = useState(false);\n  const [userId, setUserId] = useState();\n  const [modelId, setModelId] = useState();\n  const [token, setToken] = useState();\n  useEffect(() => {\n    if (localStorage.getItem('userId')) {\n      setUserId(localStorage.getItem('userId'));\n      setToken(localStorage.getItem('token'));\n    } else {\n      setUserId(sessionStorage.getItem('userId'));\n      setToken(sessionStorage.getItem('token'));\n    }\n\n    setModelId(sessionStorage.getItem('modelId'));\n  }, []);\n\n  const printContainers = async () => {\n    try {\n      console.log(`${url}/container/findAll/${userId}/${responseSelect}/${modelId}`);\n      const resJson = await fetch(`${url}/container/findAll/${userId}/${responseSelect}/${modelId}`);\n      const res = await resJson.json();\n      const storageContainer = await storageContainers;\n      console.log(storageContainer);\n\n      if (res.length) {\n        const stockRes = res.slice().reverse();\n        console.log(stockRes);\n\n        if (storageContainer.length > 0) {\n          let resResult = res.filter(res => res.response_id != null);\n          console.log(resResult);\n          let newContainer = [];\n\n          if (storageContainer[0].ordering > storageContainer[storageContainer.length - 1].ordering) {\n            for (let i = 0; storageContainer.length > i; i++) {\n              for (let a = 0; a < resResult.length; a++) {\n                if (resResult[a].id === storageContainer[i].id) storageContainer.splice(i, 1);\n              }\n            }\n\n            let storageReverse = storageContainer.reverse();\n            newContainer = [...storageReverse, ...resResult];\n          } else {\n            newContainer = [...storageContainer, ...resResult];\n          }\n\n          console.log(newContainer);\n          setContainers((await newContainer));\n          takeCard(newContainer);\n        } else {\n          setContainers(res);\n          takeCard(res);\n        }\n\n        setContainersReverse(stockRes);\n        setOrder(stockRes[0].ordering + 1);\n      } else setOrder(1);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setStorageContainers(containers);\n  };\n\n  useEffect(() => {\n    printContainers();\n  }, [responseSelectChanging, userId, modelId]);\n\n  const takeCard = async res => {\n    let stock = [];\n\n    for (let i = 0; i < res.length + 3; i++) {\n      if (res[i]) {\n        const result = (await fetch(`${url}/relation/findCardQuestion/${res[i].id}/${userId}/${modelId}`)).json();\n        let resultCards = result.then(result => {\n          stock = [...stock, result];\n          setCardsQuest(stock);\n        });\n      }\n    }\n\n    let stockRes = [];\n\n    for (let i = 0; i < res.length + 3; i++) {\n      if (res[i]) {\n        const result = (await fetch(`${url}/relation/findCardResponse/${res[i].id}/${userId}/${modelId}`)).json();\n        let resultCards = result.then(result => {\n          stockRes = [...stockRes, result];\n          setCardsRes(stockRes);\n        });\n      }\n    }\n\n    let stockCategory = [];\n\n    for (let i = 0; i < res.length + 3; i++) {\n      if (typeof res[i] === 'object') {\n        fetch(`${url}/relation/findCardCategory/${res[i].id}/${userId}/${modelId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Acces-Control-Allow-Origin': {\n              origin\n            },\n            'authorization': token\n          }\n        }).then(res => res.json()).then(res => {\n          stockCategory = [...stockCategory, res];\n          setCardsCategory(stockCategory);\n        });\n      }\n    }\n  };\n\n  const createContainer = async type => {\n    let stockContainers = containers;\n    stockContainers.reverse();\n\n    if (stockContainers[0] && responseSelect !== 0) {\n      if (stockContainers[0].content_type === \"question\" || responseBool === true) {\n        try {\n          let postContainerOne = await fetch(url + '/container/create', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Acces-Control-Allow-Origin': {\n                origin\n              },\n              'authorization': token\n            },\n            body: JSON.stringify({\n              content_type: type,\n              user_id: userId,\n              ordering: order,\n              response_id: responseSelect,\n              model_id: modelId\n            })\n          });\n\n          if (postContainerOne) {\n            printContainers();\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        alert('veuillez selectionner une réponse');\n      }\n    } else {\n      try {\n        let postContainer = await fetch(url + '/container/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Acces-Control-Allow-Origin': {\n              origin\n            },\n            'authorization': token\n          },\n          body: JSON.stringify({\n            content_type: type,\n            user_id: userId,\n            ordering: order,\n            model_id: modelId\n          })\n        });\n\n        if (postContainer) {\n          printContainers();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    setResponseBool(false);\n  };\n\n  const insertContainerId = async (id, type) => {\n    const relations = await fetch(`${url}/relation/find/${userId}/${modelId}`);\n    const res = await relations.json();\n    console.log(res);\n    const relationsResult = res.filter(relation => relation.onChange === 1);\n    console.log(relationsResult);\n    let typeOnChange = \"\";\n\n    if (relationsResult[0].question_id) {\n      typeOnChange = \"question\";\n    } else if (relationsResult[0].response_id) {\n      typeOnChange = \"response\";\n    } else if (relationsResult[0].category_id) {\n      typeOnChange = \"category\";\n    }\n\n    console.log(typeOnChange);\n    console.log(type);\n    connectClassDisable();\n\n    if (type === typeOnChange) {\n      console.log('dalu');\n\n      try {\n        const result = await fetch(`${url}/relation/update/${userId}/${modelId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': `${origin}`,\n            'authorization': token\n          },\n          body: JSON.stringify({\n            container_id: id,\n            onChange: 0\n          })\n        });\n\n        if (result) {\n          printContainers();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      fetch(`${url}/relation/delete/${userId}/${modelId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Acces-Control-Allow-Origin': {\n            origin\n          },\n          'authorization': token\n        }\n      });\n      alert('veuillez selectionner un contenaire du même type');\n    }\n  };\n\n  const selectResponse = async function (event) {\n    console.log(event.currentTarget.childNodes);\n    const numberCard = parseInt(event.currentTarget.childNodes[0].id.replace('card', ''));\n    setResponseSelect(numberCard);\n    responseSelected.length = parseInt(event.currentTarget.childNodes[0].id.replace('card', ''));\n    const containerIndex = parseInt(event.currentTarget.childNodes[1].id.replace('container', '')) + 1;\n    const stockContainers = containers;\n    stockContainers.length = containerIndex;\n    setStorageContainers(stockContainers);\n    let stockResponseSelected = [...responseSelected, numberCard];\n\n    for (let a = 0; a < cardsRes.length; a++) {\n      if (cardsRes[a].length) {\n        for (let b = 0; b < cardsRes[a].length; b++) {\n          for (let c = 0; c < stockResponseSelected.length; c++) {\n            const nbRes = cardsRes[a].filter(card => stockResponseSelected.includes(card.id));\n\n            if (nbRes.length > 1) {\n              for (let i = 0; i < stockResponseSelected.length; i++) {\n                for (let a = 0; a < nbRes.length - 1; a++) {\n                  if (nbRes[a].id === stockResponseSelected[i]) {\n                    stockResponseSelected.splice(i, 1);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    setResponseSelected(stockResponseSelected);\n    setTimeout(() => {\n      setResponseSelectChanging(!responseSelectChanging);\n      setResponseBool(true);\n    }, 200);\n  };\n\n  console.log(responseSelected);\n\n  const deleteRelationQuestion = async event => {\n    const containerId = event.currentTarget.parentNode.id.replace('container', '');\n    const cardId = event.target.id.replace('card', '');\n    fetch(`${url}/relation/deleteQuestionCard/${containerId}/${cardId}/${userId}/${modelId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Acces-Control-Allow-Origin': {\n          origin\n        },\n        'authorization': token\n      }\n    });\n    fetch(`${url}/container/delete/${containerId}/${userId}/${modelId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Acces-Control-Allow-Origin': {\n          origin\n        },\n        'authorization': token\n      }\n    });\n    setTimeout(() => {\n      window.location.reload();\n    }, 200);\n  };\n\n  const deleteRelationResponse = async (containerIndex, containerId, cardId) => {\n    fetch(`${url}/relation/deleteResponseCard/${containerId}/${cardId}/${userId}/${modelId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Acces-Control-Allow-Origin': {\n          origin\n        },\n        'authorization': token\n      }\n    });\n\n    if (cardsRes[containerIndex].length < 2) {\n      await fetch(`${url}/container/delete/${containerId}/${userId}/${modelId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Acces-Control-Allow-Origin': {\n            origin\n          },\n          'authorization': token\n        }\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 200);\n    }\n\n    printContainers();\n  };\n\n  const deleteCategory = async containerId => {\n    fetch(`${url}/relation/delete/${containerId}/${userId}/${modelId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Acces-Control-Allow-Origin': {\n          origin\n        },\n        'authorization': token\n      }\n    });\n    fetch(`${url}/container/delete/${containerId}/${userId}/${modelId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Acces-Control-Allow-Origin': {\n          origin\n        },\n        'authorization': token\n      }\n    });\n    printContainers();\n  };\n\n  console.log(cardsRes);\n\n  const deleteContainer = containerId => {\n    fetch(`${url}/container/delete/${containerId}/${userId}/${modelId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Acces-Control-Allow-Origin': {\n          origin\n        },\n        'authorization': token\n      }\n    });\n    document.location.reload();\n  };\n\n  console.log(responseSelected);\n  return React.createElement(\"div\", {\n    className: \"containerDiagram\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }), Array.isArray(containers) && containers.map((container, index) => {\n    return React.createElement(\"div\", {\n      className: container.content_type === \"question\" && index !== 0 ? \"contentBuildQuestion\" : container.content_type === \"question\" && index === 0 ? \"contentBuildQuestionFirst\" : container.content_type === \"response\" ? \"contentBuildResponse\" : \"contentBuildDestination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contentBuildCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, !Array.isArray(cardsQuest[index]) && !Array.isArray(cardsCategory[index]) && !Array.isArray(cardsRes[index]) && React.createElement(\"div\", {\n      className: \"contentEmptyContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onClick: () => {\n        deleteContainer(container.id);\n      },\n      alt: \"delete container\",\n      src: require('./image/cross.png'),\n      className: \"crossIconContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"typeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"contenaire \\xE0 \", container.content_type)), Array.isArray(cardsQuest[index]) && container.content_type === \"question\" && cardsQuest[index].map(card => {\n      return React.createElement(\"div\", {\n        id: `container${container.id}`,\n        className: \"containerCardQuest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"delete\",\n        id: `card${card.id}`,\n        onClick: deleteRelationQuestion,\n        src: require('../ListStock/cardList/image/delete_icon.png'),\n        className: \"iconDeleteCardBuildQuest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"textCardBuildQuest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, card.content));\n    }), Array.isArray(cardsRes[index]) && container.content_type === \"response\" && cardsRes[index].map(card => {\n      return React.createElement(\"div\", {\n        onClick: selectResponse,\n        id: `container${container.id}`,\n        className: responseSelected.includes(card.id) ? 'containerCardResChatActive' : 'containerCardResChat',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"delete\",\n        id: `card${card.id}`,\n        onClick: () => {\n          deleteRelationResponse(index, container.id, card.id);\n        },\n        src: require('../ListStock/cardList/image/delete_icon.png'),\n        className: \"iconDeleteCardBuild\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: `container${index}`,\n        className: \"textCardInBuild\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, card.content));\n    }), Array.isArray(cardsCategory[index]) && container.content_type === \"category\" && cardsCategory[index].map(card => {\n      return React.createElement(\"div\", {\n        id: `container${container.id}`,\n        className: \"containerCardCategoryBuild\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"delete\",\n        id: `card${card.id}`,\n        onClick: () => {\n          deleteCategory(container.id);\n        },\n        src: require('../ListStock/cardList/image/delete_icon.png'),\n        className: \"iconDeleteCardBuild\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        alt: \"mail\",\n        src: require('./image/mail_icon.svg'),\n        className: \"mailIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"textCardCategoryBuild\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, card.name));\n    })), React.createElement(\"div\", {\n      className: \"contentIconCardBuild\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: `connect${container.id}`,\n      onClick: () => {\n        insertContainerId(container.id, container.content_type);\n      },\n      className: classConnectButton,\n      alt: \"connect_icon\",\n      src: require('./image/connect_icon.png'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    })));\n  }), React.createElement(\"div\", {\n    className: \"containerButtonBuilder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"textAddContainerBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }, \"Ajouter une \\xE9tape\"), React.createElement(\"div\", {\n    className: \"contentButtonBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }, containersReverse ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, containersReverse[0].content_type !== \"destination\" && React.createElement(\"div\", {\n    onClick: () => {\n      createContainer('question');\n    },\n    className: \"containerAddBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"add\",\n    src: require('./image/plus_icon.png'),\n    className: \"plusIconQuestion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"textAddBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }, \"question\"))) : React.createElement(\"div\", {\n    onClick: () => {\n      createContainer('question');\n    },\n    className: \"containerAddBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"add\",\n    src: require('./image/plus_icon.png'),\n    className: \"plusIconQuestion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"textAddBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, \"question\")), containersReverse && React.createElement(\"div\", {\n    className: \"contentButtonAddBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, containersReverse[0].content_type === \"question\" && containersReverse[0].content_type !== \"destination\" && React.createElement(\"div\", {\n    onClick: () => {\n      createContainer('response');\n    },\n    className: \"containerAddBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"add\",\n    src: require('./image/plus_icon.png'),\n    className: \"plusIconResponse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"textAddBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435\n    },\n    __self: this\n  }, \"r\\xE9ponse\")), (containersReverse[0].content_type === \"question\" || containersReverse[0].content_type === \"response\") && React.createElement(\"div\", {\n    onClick: () => {\n      createContainer('category');\n    },\n    className: \"containerAddBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"add\",\n    src: require('./image/plus_icon.png'),\n    className: \"plusIconDestination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"textAddBuild\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, \"r\\xE9ception\"))))));\n};\n\nexport default Builder;","map":{"version":3,"sources":["/home/thomas/sortouch_front/src/components/creating_area/builder/Builder.js"],"names":["React","useState","useEffect","url","origin","useGlobalState","Link","Navbar","Builder","containers","setContainers","order","setOrder","connectClassDisable","classConnectButton","containersReverse","setContainersReverse","cardsQuest","setCardsQuest","cardsRes","setCardsRes","cardsCategory","setCardsCategory","responseSelect","setResponseSelect","responseSelectChanging","setResponseSelectChanging","storageContainers","setStorageContainers","responseSelected","setResponseSelected","responseBool","setResponseBool","userId","setUserId","modelId","setModelId","token","setToken","localStorage","getItem","sessionStorage","printContainers","console","log","resJson","fetch","res","json","storageContainer","length","stockRes","slice","reverse","resResult","filter","response_id","newContainer","ordering","i","a","id","splice","storageReverse","takeCard","error","stock","result","resultCards","then","stockCategory","method","headers","createContainer","type","stockContainers","content_type","postContainerOne","body","JSON","stringify","user_id","model_id","alert","postContainer","insertContainerId","relations","relationsResult","relation","onChange","typeOnChange","question_id","category_id","container_id","selectResponse","event","currentTarget","childNodes","numberCard","parseInt","replace","containerIndex","stockResponseSelected","b","c","nbRes","card","includes","setTimeout","deleteRelationQuestion","containerId","parentNode","cardId","target","window","location","reload","deleteRelationResponse","deleteCategory","deleteContainer","document","Array","isArray","map","container","index","require","content","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport url from '../../../api/url';\nimport origin from '../../../api/origin';\nimport useGlobalState from '../../../hooks/useGlobalState';\nimport {Link} from 'react-router-dom'\nimport Navbar from '../../navbar/Navbar'\nimport './card.css'\nimport './builder.scss'\n\nconst Builder = () => {\n    const [containers, setContainers] = useState([])\n    const [order, setOrder] = useState(1)\n    const { connectClassDisable, classConnectButton } = useGlobalState();\n    const [containersReverse, setContainersReverse] = useState()\n    const [cardsQuest, setCardsQuest] = useState([])\n    const [cardsRes, setCardsRes] = useState([])\n    const [cardsCategory, setCardsCategory] = useState([])\n    const [responseSelect, setResponseSelect] = useState(0)\n    const [responseSelectChanging, setResponseSelectChanging] = useState(false)\n    const [storageContainers, setStorageContainers] = useState([])\n    const [responseSelected, setResponseSelected] = useState([])\n    const [responseBool, setResponseBool] = useState(false)\n    const [userId, setUserId] = useState()\n    const [modelId, setModelId] = useState()\n    const [token, setToken] = useState()\n\n    useEffect(() => {\n        if(localStorage.getItem('userId')){\n            setUserId(localStorage.getItem('userId'))\n            setToken(localStorage.getItem('token'))\n        } else {\n            setUserId(sessionStorage.getItem('userId'))\n            setToken(sessionStorage.getItem('token'))\n        }\n        setModelId(sessionStorage.getItem('modelId'))\n    }, [])\n\n    const printContainers = async () => {\n        try{\n            console.log(`${url}/container/findAll/${userId}/${responseSelect}/${modelId}`)\n            const resJson = await fetch(`${url}/container/findAll/${userId}/${responseSelect}/${modelId}`)\n            const res = await resJson.json()\n            const storageContainer = await storageContainers\n            console.log(storageContainer)\n                if(res.length){\n                    const stockRes = res.slice().reverse()\n                    console.log(stockRes)\n                    if(storageContainer.length > 0){\n                        let resResult = res.filter(res => res.response_id != null)\n                        console.log(resResult)\n                        let newContainer = []\n                        if(storageContainer[0].ordering > storageContainer[storageContainer.length - 1].ordering){\n                            for(let i = 0; storageContainer.length > i; i++){\n                                for(let a = 0; a < resResult.length; a++){\n                                    if(resResult[a].id === storageContainer[i].id) storageContainer.splice(i, 1)\n                                }\n                            }\n                            let storageReverse = storageContainer.reverse()\n                            newContainer = [...storageReverse, ...resResult]\n                        } else {\n                            newContainer = [...storageContainer, ...resResult]\n                        }\n                        console.log(newContainer)\n                        setContainers(await newContainer)\n                        takeCard(newContainer)\n                    } else {\n                        setContainers(res)\n                        takeCard(res)\n                    }\n                    setContainersReverse(stockRes)\n                    setOrder(stockRes[0].ordering + 1)\n                } else setOrder(1)\n            \n        } catch(error) {\n            console.log(error)\n        }\n        setStorageContainers(containers)\n    }\n\n    useEffect(() => {\n            \n        \n        printContainers()\n    },[responseSelectChanging, userId, modelId])\n\n    const takeCard = async (res) => {\n        let stock = []\n        for(let i = 0; i < res.length + 3; i++){\n            if(res[i]){\n                const result = (await fetch(`${url}/relation/findCardQuestion/${res[i].id}/${userId}/${modelId}`)).json()\n                let resultCards = result.then((result) => {\n                        stock = [...stock, result]\n                        setCardsQuest(stock)\n                })\n            }\n        }\n        let stockRes = []\n        for(let i = 0; i < res.length + 3; i++){\n            if(res[i]){\n                const result = (await fetch(`${url}/relation/findCardResponse/${res[i].id}/${userId}/${modelId}`)).json()\n                let resultCards = result.then((result) => {\n                        stockRes = [...stockRes, result]\n                        setCardsRes(stockRes)\n                })\n            }\n        }\n        let stockCategory = []\n        for(let i = 0; i < res.length + 3; i++){\n            if(typeof res[i] === 'object'){\n                fetch(`${url}/relation/findCardCategory/${res[i].id}/${userId}/${modelId}`, {\n                    method: 'GET',\n                    headers: {\n                      'Content-Type' :'application/json',\n                      'Acces-Control-Allow-Origin' : {origin},\n                      'authorization': token\n                    }})\n                .then(res => res.json())\n                .then(res => {\n                    stockCategory = [...stockCategory, res]\n                    setCardsCategory(stockCategory)\n                })\n            }\n        }\n    }\n\n\n    const createContainer = async (type) => {\n        let stockContainers = containers\n        stockContainers.reverse()\n        if(stockContainers[0] && responseSelect !== 0){\n            if(stockContainers[0].content_type === \"question\" || responseBool === true) {\n                try{\n                    let postContainerOne = await fetch(url + '/container/create', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type' :'application/json',\n                        'Acces-Control-Allow-Origin' : {origin},\n                        'authorization': token\n                    },\n                    body: JSON.stringify({\n                        content_type : type,\n                        user_id : userId,\n                        ordering: order,\n                        response_id : responseSelect,\n                        model_id : modelId\n                        })\n                    });\n                    if(postContainerOne){\n                        printContainers()\n                    }\n                } catch (error)  {\n                    console.log(error);\n                }\n            } else {\n                alert('veuillez selectionner une réponse')\n            }\n        } else {\n            try{\n                let postContainer = await fetch(url + '/container/create', {\n                method: 'POST',\n                headers: {\n                    'Content-Type' :'application/json',\n                    'Acces-Control-Allow-Origin' : {origin},\n                    'authorization': token\n                },\n                body: JSON.stringify({\n                    content_type : type,\n                    user_id : userId,\n                    ordering: order,\n                    model_id : modelId\n                    })\n                });\n                if(postContainer){\n                    printContainers()\n                }\n            } catch (error)  {\n                console.log(error);\n            }\n        }\n        setResponseBool(false)\n    }\n\n\n    const insertContainerId = async (id, type) => {\n        const relations = await fetch(`${url}/relation/find/${userId}/${modelId}`)\n        const res = await relations.json()\n        console.log(res)\n        const relationsResult = res.filter(relation => relation.onChange === 1)\n        console.log(relationsResult)\n        let typeOnChange = \"\";\n        if(relationsResult[0].question_id){\n            typeOnChange = \"question\"\n        } else if(relationsResult[0].response_id){\n            typeOnChange = \"response\"\n        } else if(relationsResult[0].category_id){\n            typeOnChange = \"category\"\n        }\n        console.log(typeOnChange)\n        console.log(type)\n        connectClassDisable()\n\n        if(type === typeOnChange){\n            console.log('dalu')\n            try{\n            const result = await fetch(`${url}/relation/update/${userId}/${modelId}`, {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': `${origin}`,\n                  'authorization': token\n                },\n                body: JSON.stringify({\n                    container_id : id,\n                    onChange: 0\n                })\n            })\n                if(result){\n                        printContainers()\n                }\n            } catch (error)  {\n                console.log(error);\n            }\n        } else {\n                fetch(`${url}/relation/delete/${userId}/${modelId}`, {\n                    method: 'DELETE',\n                      headers: {\n                        'Content-Type' :'application/json',\n                        'Acces-Control-Allow-Origin' : {origin},\n                        'authorization': token\n                      }\n                })\n                alert('veuillez selectionner un contenaire du même type')\n        }\n    }\n\n    const selectResponse = async function (event) {\n        console.log(event.currentTarget.childNodes)\n        const numberCard = parseInt(event.currentTarget.childNodes[0].id.replace('card', ''))\n        setResponseSelect(numberCard)\n        responseSelected.length = parseInt(event.currentTarget.childNodes[0].id.replace('card', ''))\n\n        const containerIndex = (parseInt(event.currentTarget.childNodes[1].id.replace('container', '')) + 1)\n        const stockContainers = containers\n        stockContainers.length = containerIndex\n        setStorageContainers(stockContainers)\n\n        \n        let stockResponseSelected = ([...responseSelected, numberCard])\n\n            for(let a = 0; a < cardsRes.length; a++){\n                if(cardsRes[a].length){\n                    for(let b = 0; b < cardsRes[a].length; b++){\n                            for(let c = 0; c < stockResponseSelected.length; c++){\n                                const nbRes = cardsRes[a].filter(card => stockResponseSelected.includes(card.id))\n                                if(nbRes.length > 1){\n                                    for(let i = 0; i < stockResponseSelected.length; i++){\n                                        for(let a = 0; a < nbRes.length - 1; a++){\n                                            if(nbRes[a].id === (stockResponseSelected[i])){\n                                                stockResponseSelected.splice(i, 1)\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n        setResponseSelected(stockResponseSelected)\n        setTimeout(() => {\n            setResponseSelectChanging(!responseSelectChanging)\n            setResponseBool(true)\n        }, 200)\n    }\n\n    console.log(responseSelected)\n\n\n    const deleteRelationQuestion = async (event) =>{\n        const containerId = (event.currentTarget.parentNode.id).replace('container', '')\n        const cardId = (event.target.id).replace('card', '')\n        fetch (`${url}/relation/deleteQuestionCard/${containerId}/${cardId}/${userId}/${modelId}`, {\n            method: 'DELETE',\n              headers: {\n                'Content-Type' :'application/json',\n                'Acces-Control-Allow-Origin' : {origin},\n                'authorization': token\n              }\n        })\n        fetch(`${url}/container/delete/${containerId}/${userId}/${modelId}`, {\n            method: 'DELETE',\n              headers: {\n                'Content-Type' :'application/json',\n                'Acces-Control-Allow-Origin' : {origin},\n                'authorization': token\n              }\n        })\n        setTimeout(() => {\n            window.location.reload()\n        }, 200)\n    }\n\n    const deleteRelationResponse = async (containerIndex, containerId, cardId) => {\n        fetch(`${url}/relation/deleteResponseCard/${containerId}/${cardId}/${userId}/${modelId}`, {\n            method: 'DELETE',\n              headers: {\n                'Content-Type' :'application/json',\n                'Acces-Control-Allow-Origin' : {origin},\n                'authorization': token\n              }\n        })\n        if(cardsRes[containerIndex].length < 2){\n            await fetch(`${url}/container/delete/${containerId}/${userId}/${modelId}`, {\n                method: 'DELETE',\n                  headers: {\n                    'Content-Type' :'application/json',\n                    'Acces-Control-Allow-Origin' : {origin},\n                    'authorization': token\n                  }\n            })\n            setTimeout(() => {\n                window.location.reload()\n            }, 200)\n        }\n        printContainers()\n    }\n\n    const deleteCategory = async (containerId) => {\n        fetch(`${url}/relation/delete/${containerId}/${userId}/${modelId}`, {\n            method: 'DELETE',\n              headers: {\n                'Content-Type' :'application/json',\n                'Acces-Control-Allow-Origin' : {origin},\n                'authorization': token\n              }\n        })\n        fetch(`${url}/container/delete/${containerId}/${userId}/${modelId}`, {\n            method: 'DELETE',\n              headers: {\n                'Content-Type' :'application/json',\n                'Acces-Control-Allow-Origin' : {origin},\n                'authorization': token\n              }\n        })\n        printContainers()\n    }\n\n\n\n    console.log(cardsRes)\n    const deleteContainer = (containerId) => {\n        fetch(`${url}/container/delete/${containerId}/${userId}/${modelId}`, {\n            method: 'DELETE',\n              headers: {\n                'Content-Type' :'application/json',\n                'Acces-Control-Allow-Origin' : {origin},\n                'authorization': token\n              }\n        })\n        document.location.reload()\n    }\n\n    console.log(responseSelected)\n\n    return(\n        <div className=\"containerDiagram\">\n            <Navbar/>\n            {Array.isArray(containers) &&\n            containers.map((container, index) => {\n                return(\n                    <div className={container.content_type === \"question\" && index !== 0 ? \"contentBuildQuestion\" : container.content_type === \"question\" && index === 0 ? \"contentBuildQuestionFirst\" : container.content_type === \"response\" ? \"contentBuildResponse\" : \"contentBuildDestination\"}>\n                        <div className=\"contentBuildCard\">\n                            {!Array.isArray(cardsQuest[index]) && !Array.isArray(cardsCategory[index]) && !Array.isArray(cardsRes[index]) &&\n                            <div className=\"contentEmptyContainer\">\n                                <img onClick={() => {deleteContainer(container.id)}} alt=\"delete container\" src={require('./image/cross.png')} className=\"crossIconContainer\"/>\n                                <p className=\"typeContainer\">contenaire à {container.content_type}</p>\n                            </div>}\n                            {Array.isArray(cardsQuest[index]) && container.content_type === \"question\" &&\n                                cardsQuest[index].map(card => {\n                                    return(\n                                        <div id={`container${container.id}`} className=\"containerCardQuest\">\n                                        <img alt=\"delete\" id={`card${card.id}`} onClick={deleteRelationQuestion} src={require('../ListStock/cardList/image/delete_icon.png')} className=\"iconDeleteCardBuildQuest\"/>\n                                            <p className=\"textCardBuildQuest\">{card.content}</p>\n                                        </div>\n                                    )\n                                })}\n                            {Array.isArray(cardsRes[index]) && container.content_type === \"response\" &&\n                                cardsRes[index].map(card => {\n                                    return(\n                                        <div onClick={selectResponse} id={`container${container.id}`}  className={responseSelected.includes(card.id) ? 'containerCardResChatActive' : 'containerCardResChat'}>\n                                            <img alt=\"delete\" id={`card${card.id}`} onClick={() => {deleteRelationResponse(index, container.id, card.id)}} src={require('../ListStock/cardList/image/delete_icon.png')} className=\"iconDeleteCardBuild\"/>\n                                            <p id={`container${index}`} className=\"textCardInBuild\">{card.content}</p>\n                                        </div>)\n                                        })\n                                    }\n                            {Array.isArray(cardsCategory[index]) && container.content_type === \"category\" &&\n                                cardsCategory[index].map(card => {\n                                    return(\n                                        <div id={`container${container.id}`} className=\"containerCardCategoryBuild\">\n                                            <img alt=\"delete\" id={`card${card.id}`} onClick={() => {deleteCategory(container.id)}} src={require('../ListStock/cardList/image/delete_icon.png')} className=\"iconDeleteCardBuild\"/>\n                                            <img alt=\"mail\" src={require('./image/mail_icon.svg')} className=\"mailIcon\"/>\n                                            <p className=\"textCardCategoryBuild\">{card.name}</p>\n                                        </div>\n                                    )\n                                })}\n                        </div>\n                        <div className=\"contentIconCardBuild\">\n                            <img id={`connect${container.id}`} onClick={() => {insertContainerId(container.id, container.content_type)}}  className={classConnectButton} alt=\"connect_icon\" src={require('./image/connect_icon.png')}/>\n                        </div>\n                    </div>\n                )\n            })}\n            <div className=\"containerButtonBuilder\">\n                <p className=\"textAddContainerBuild\">Ajouter une étape</p>\n                <div className=\"contentButtonBuild\">\n                    {containersReverse ? \n                    <div>\n                        {containersReverse[0].content_type !== \"destination\" &&\n                        <div onClick={() => {createContainer('question')}} className=\"containerAddBuild\">\n                            <img alt=\"add\" src={require('./image/plus_icon.png')} className=\"plusIconQuestion\"/>\n                            <p className=\"textAddBuild\">question</p>\n                        </div>}\n                    </div>\n                    : \n                    <div onClick={() => {createContainer('question')}} className=\"containerAddBuild\">\n                        <img alt=\"add\" src={require('./image/plus_icon.png')} className=\"plusIconQuestion\"/>\n                            <p className=\"textAddBuild\">question</p>\n                    </div>}\n\n                    {containersReverse &&\n                    <div className=\"contentButtonAddBuild\">\n                        {containersReverse[0].content_type === \"question\" && containersReverse[0].content_type !== \"destination\" &&\n                        <div onClick={() => {createContainer('response')}} className=\"containerAddBuild\">\n                            <img alt=\"add\" src={require('./image/plus_icon.png')} className=\"plusIconResponse\"/>\n                            <p className=\"textAddBuild\">réponse</p>\n                        </div>}\n                        {(containersReverse[0].content_type === \"question\" || containersReverse[0].content_type === \"response\") &&\n                        <div onClick={() => {createContainer('category')}} className=\"containerAddBuild\">\n                            <img alt=\"add\" src={require('./image/plus_icon.png')} className=\"plusIconDestination\"/>\n                            <p className=\"textAddBuild\">réception</p>\n                        </div>}\n                    </div>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Builder;"]},"metadata":{},"sourceType":"module"}